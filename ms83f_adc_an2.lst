

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Mon Sep 02 17:45:39 2019

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F685
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text60,local,class=CODE,delta=2
     5                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,delta=2
     9                           	psect	text61,local,class=CODE,delta=2
    10                           	psect	text62,local,class=CODE,delta=2
    11                           	psect	text63,local,class=CODE,delta=2
    12                           	psect	text64,local,class=CODE,delta=2
    13                           	psect	text65,local,class=CODE,delta=2
    14                           	psect	pa_nodes,global,class=CODE,delta=2
    15                           	dabs	1,0x19D,1
    16                           	dabs	1,0x19E,1
    17                           	dabs	1,0x19E,1
    18                           	dabs	1,0x19E,1
    19                           	dabs	1,0x18C,1
    20                           	dabs	1,0x19E,1
    21                           	dabs	1,0x19E,1
    22                           	dabs	1,0x19E,1
    23                           	dabs	1,0x19E,1
    24                           	dabs	1,0x19D,1
    25                           	dabs	1,0x19D,1
    26                           	dabs	1,0x19D,1
    27                           	dabs	1,0x19D,1
    28                           	dabs	1,0x19D,1
    29                           	dabs	1,0x18C,1
    30                           	dabs	1,0x7E,2
    31  000A                     
    32                           	psect	text60
    33  0000                     __ptext60:	
    34  019D                     _PSTRCON	set	413	;_PSTRCON
    35  019E                     _SRCON	set	414	;_SRCON
    36  0CF5                     _C1SEN	set	3317	;_C1SEN
    37  0CF4                     _C2REN	set	3316	;_C2REN
    38  0C67                     _EEPGD	set	3175	;_EEPGD
    39  0CF2                     _PULSR	set	3314	;_PULSR
    40  0CF3                     _PULSS	set	3315	;_PULSS
    41  0CF6                     _SR0	set	3318	;_SR0
    42  0CF7                     _SR1	set	3319	;_SR1
    43  0CE8                     _STRA	set	3304	;_STRA
    44  0CE9                     _STRB	set	3305	;_STRB
    45  0CEA                     _STRC	set	3306	;_STRC
    46  0CEB                     _STRD	set	3307	;_STRD
    47  0CEC                     _STRSYNC	set	3308	;_STRSYNC
    48  0C62                     _WREN	set	3170	;_WREN
    49                           
    50                           	psect	nvCOMMON
    51  0078                     __pnvCOMMON:	
    52  0078                     _Buff_AN2:	
    53  0078                     	ds	2
    54  001F                     _ADCON0	set	31
    55  001E                     _ADRESH	set	30
    56  0019                     _CMCON0	set	25
    57  000B                     _INTCON	set	11
    58  0005                     _PORTA	set	5
    59  0007                     _PORTC	set	7
    60  00F8                     _ADON	set	248
    61  00F9                     _GO_DONE	set	249
    62  009F                     _ADCON1	set	159
    63  009E                     _ADRESL	set	158
    64  0091                     _ANSEL	set	145
    65  0081                     _OPTION	set	129
    66  008F                     _OSCCON	set	143
    67  0085                     _TRISA	set	133
    68  0087                     _TRISC	set	135
    69  0095                     _WPUA	set	149
    70  0088                     _WPUC	set	136
    71                           
    72                           	psect	cinit
    73  0798                     start_initialization:	
    74  0798                     end_of_initialization:	
    75                           ;End of C runtime variable initialization code
    76                           
    77  0798  0183               	clrf	3
    78  0799  2FA7               	ljmp	_main	;jump to C main() function
    79                           
    80                           	psect	cstackCOMMON
    81  0070                     __pcstackCOMMON:	
    82  0070                     ?_DEVICE_INIT:	
    83  0070                     ??_DEVICE_INIT:	
    84                           ; 0 bytes @ 0x0
    85                           
    86  0070                     ?_ADC_INIT:	
    87                           ; 0 bytes @ 0x0
    88                           
    89  0070                     ??_ADC_INIT:	
    90                           ; 0 bytes @ 0x0
    91                           
    92  0070                     ?_DELAY_30US:	
    93                           ; 0 bytes @ 0x0
    94                           
    95  0070                     ??_DELAY_30US:	
    96                           ; 0 bytes @ 0x0
    97                           
    98  0070                     ?_main:	
    99                           ; 0 bytes @ 0x0
   100                           
   101  0070                     DELAY_30US@a:	
   102                           ; 0 bytes @ 0x0
   103                           
   104                           
   105                           ; 1 bytes @ 0x0
   106  0070                     	ds	1
   107  0071                     ?_GET_ADC_VALUE:	
   108  0071                     GET_ADC_VALUE@Vref:	
   109                           ; 2 bytes @ 0x1
   110                           
   111                           
   112                           ; 1 bytes @ 0x1
   113  0071                     	ds	2
   114  0073                     ??_GET_ADC_VALUE:	
   115                           
   116                           ; 0 bytes @ 0x3
   117  0073                     	ds	1
   118  0074                     GET_ADC_VALUE@ChannelNO:	
   119                           
   120                           ; 1 bytes @ 0x4
   121  0074                     	ds	1
   122  0075                     GET_ADC_VALUE@TempAdcon0:	
   123                           
   124                           ; 1 bytes @ 0x5
   125  0075                     	ds	1
   126  0076                     GET_ADC_VALUE@TempADCBuffer:	
   127                           
   128                           ; 2 bytes @ 0x6
   129  0076                     	ds	2
   130  0078                     ??_main:	
   131                           
   132                           	psect	maintext
   133  07A7                     __pmaintext:	
   134                           ; 0 bytes @ 0x8
   135 ;;Data sizes: Strings 0, constant 0, data 0, bss 0, persistent 2 stack 0
   136 ;;Auto spaces:   Size  Autos    Used
   137 ;; COMMON          14      8      10
   138 ;; BANK0           80      0       0
   139 ;; BANK1           32      0       0
   140 ;;
   141 ;; Pointer list with targets:
   142 ;; ?_GET_ADC_VALUE	unsigned int  size(1) Largest target is 0
   143 ;;
   144 ;;
   145 ;; Critical Paths under _main in COMMON
   146 ;;
   147 ;;   _main->_GET_ADC_VALUE
   148 ;;   _GET_ADC_VALUE->_DELAY_30US
   149 ;;
   150 ;; Critical Paths under _main in BANK0
   151 ;;
   152 ;;   None.
   153 ;;
   154 ;; Critical Paths under _main in BANK1
   155 ;;
   156 ;;   None.
   157 ;;
   158 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   159 ;;
   160 ;;
   161 ;;Call Graph Tables:
   162 ;;
   163 ;; ---------------------------------------------------------------------------------
   164 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   165 ;; ---------------------------------------------------------------------------------
   166 ;; (0) _main                                                 0     0      0     135
   167 ;;                        _DEVICE_INIT
   168 ;;                           _ADC_INIT
   169 ;;                      _GET_ADC_VALUE
   170 ;; ---------------------------------------------------------------------------------
   171 ;; (1) _GET_ADC_VALUE                                        7     5      2     135
   172 ;;                                              1 COMMON     7     5      2
   173 ;;                         _DELAY_30US
   174 ;; ---------------------------------------------------------------------------------
   175 ;; (2) _DELAY_30US                                           1     1      0      30
   176 ;;                                              0 COMMON     1     1      0
   177 ;; ---------------------------------------------------------------------------------
   178 ;; (1) _ADC_INIT                                             0     0      0       0
   179 ;; ---------------------------------------------------------------------------------
   180 ;; (1) _DEVICE_INIT                                          0     0      0       0
   181 ;; ---------------------------------------------------------------------------------
   182 ;; Estimated maximum stack depth 2
   183 ;; ---------------------------------------------------------------------------------
   184 ;; Call Graph Graphs:
   185 ;; _main (ROOT)
   186 ;;   _DEVICE_INIT
   187 ;;   _ADC_INIT
   188 ;;   _GET_ADC_VALUE
   189 ;;     _DELAY_30US
   190 ;;
   191 ;; Address spaces:
   192 ;;Name               Size   Autos  Total    Cost      Usage
   193 ;;BITCOMMON            E      0       0       0        0.0%
   194 ;;EEDATA             100      0       0       0        0.0%
   195 ;;NULL                 0      0       0       0        0.0%
   196 ;;CODE                 0      0       0       0        0.0%
   197 ;;COMMON               E      8       A       1       71.4%
   198 ;;BITSFR0              0      0       0       1        0.0%
   199 ;;SFR0                 0      0       0       1        0.0%
   200 ;;BITSFR1              0      0       0       2        0.0%
   201 ;;SFR1                 0      0       0       2        0.0%
   202 ;;STACK                0      0       2       2        0.0%
   203 ;;BITBANK0            50      0       0       3        0.0%
   204 ;;BANK0               50      0       0       4        0.0%
   205 ;;BITBANK1            20      0       0       5        0.0%
   206 ;;BITSFR2              0      0       0       5        0.0%
   207 ;;SFR2                 0      0       0       5        0.0%
   208 ;;BANK1               20      0       0       6        0.0%
   209 ;;ABS                  0      0       A       7        0.0%
   210 ;;DATA                 0      0       C       8        0.0%
   211                           
   212                           
   213 ;; *************** function _main *****************
   214 ;; Defined at:
   215 ;;		line 116 in file "MS83F_ADC_AN2.C"
   216 ;; Parameters:    Size  Location     Type
   217 ;;		None
   218 ;; Auto vars:     Size  Location     Type
   219 ;;		None
   220 ;; Return value:  Size  Location     Type
   221 ;;		None               void
   222 ;; Registers used:
   223 ;;		wreg, status,2, status,0, pclath, cstack
   224 ;; Tracked objects:
   225 ;;		On entry : 17F/0
   226 ;;		On exit  : 0/0
   227 ;;		Unchanged: 0/0
   228 ;; Data sizes:     COMMON   BANK0   BANK1
   229 ;;      Params:         0       0       0
   230 ;;      Locals:         0       0       0
   231 ;;      Temps:          0       0       0
   232 ;;      Totals:         0       0       0
   233 ;;Total ram usage:        0 bytes
   234 ;; Hardware stack levels required when called:    2
   235 ;; This function calls:
   236 ;;		_DEVICE_INIT
   237 ;;		_ADC_INIT
   238 ;;		_GET_ADC_VALUE
   239 ;; This function is called by:
   240 ;;		Startup code after reset
   241 ;; This function uses a non-reentrant model
   242 ;;
   243  07A7                     _main:	
   244                           
   245                           ;MS83F_ADC_AN2.C: 117: DEVICE_INIT();
   246                           
   247                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   248  07A7  27B3               	fcall	_DEVICE_INIT
   249                           
   250                           ;MS83F_ADC_AN2.C: 118: ADC_INIT();
   251  07A8  279A               	fcall	_ADC_INIT
   252  07A9                     l1092:	
   253                           ;MS83F_ADC_AN2.C: 119: while(1)
   254                           
   255  07A9  3002               	movlw	2
   256                           
   257                           ;MS83F_ADC_AN2.C: 120: {
   258                           ;MS83F_ADC_AN2.C: 121: Buff_AN2 = GET_ADC_VALUE(2,0);
   259  07AA  01F1               	clrf	?_GET_ADC_VALUE
   260  07AB  27C8               	fcall	_GET_ADC_VALUE
   261  07AC  0872               	movf	?_GET_ADC_VALUE+1,w
   262  07AD  00F9               	movwf	_Buff_AN2+1	;volatile
   263  07AE  0871               	movf	?_GET_ADC_VALUE,w
   264  07AF  00F8               	movwf	_Buff_AN2	;volatile
   265                           
   266                           ;MS83F_ADC_AN2.C: 122: _nop();
   267  07B0  0000               	nop
   268                           
   269                           ;MS83F_ADC_AN2.C: 123: _nop();
   270  07B1  0000               	nop
   271  07B2  2FA9               	goto	l1092
   272  07B3                     __end_of_main:	
   273                           
   274                           	psect	text61
   275  07C8                     __ptext61:	
   276 ;; =============== function _main ends ============
   277                           
   278                           
   279 ;; *************** function _GET_ADC_VALUE *****************
   280 ;; Defined at:
   281 ;;		line 90 in file "MS83F_ADC_AN2.C"
   282 ;; Parameters:    Size  Location     Type
   283 ;;  ChannelNO       1    wreg     unsigned char 
   284 ;;  Vref            1    1[COMMON] unsigned char 
   285 ;; Auto vars:     Size  Location     Type
   286 ;;  ChannelNO       1    4[COMMON] unsigned char 
   287 ;;  TempADCBuffe    2    6[COMMON] unsigned int 
   288 ;;  TempAdcon0      1    5[COMMON] unsigned char 
   289 ;; Return value:  Size  Location     Type
   290 ;;                  2    1[COMMON] unsigned int 
   291 ;; Registers used:
   292 ;;		wreg, status,2, status,0, pclath, cstack
   293 ;; Tracked objects:
   294 ;;		On entry : 0/20
   295 ;;		On exit  : 60/0
   296 ;;		Unchanged: FFE00/0
   297 ;; Data sizes:     COMMON   BANK0   BANK1
   298 ;;      Params:         2       0       0
   299 ;;      Locals:         4       0       0
   300 ;;      Temps:          1       0       0
   301 ;;      Totals:         7       0       0
   302 ;;Total ram usage:        7 bytes
   303 ;; Hardware stack levels used:    1
   304 ;; Hardware stack levels required when called:    1
   305 ;; This function calls:
   306 ;;		_DELAY_30US
   307 ;; This function is called by:
   308 ;;		_main
   309 ;; This function uses a non-reentrant model
   310 ;;
   311  07C8                     _GET_ADC_VALUE:	
   312                           
   313                           ; Regs used in _GET_ADC_VALUE: [wreg+status,2+status,0+pclath+cstack]
   314                           ;GET_ADC_VALUE@ChannelNO stored from wreg
   315  07C8  00F4               	movwf	GET_ADC_VALUE@ChannelNO
   316                           
   317                           ;MS83F_ADC_AN2.C: 92: unsigned int TempADCBuffer=0;
   318  07C9  01F6               	clrf	GET_ADC_VALUE@TempADCBuffer
   319  07CA  01F7               	clrf	GET_ADC_VALUE@TempADCBuffer+1
   320                           
   321                           ;MS83F_ADC_AN2.C: 94: TempAdcon0 = (ChannelNO<<2);
   322  07CB  00F3               	movwf	??_GET_ADC_VALUE
   323  07CC  1003               	clrc
   324  07CD  0DF3               	rlf	??_GET_ADC_VALUE,f
   325  07CE  1003               	clrc
   326  07CF  0D73               	rlf	??_GET_ADC_VALUE,w
   327  07D0  00F5               	movwf	GET_ADC_VALUE@TempAdcon0
   328                           
   329                           ;MS83F_ADC_AN2.C: 95: if(Vref==0) {TempAdcon0 |= 0b10000001;}
   330  07D1  08F1               	movf	GET_ADC_VALUE@Vref,f
   331  07D2  1D03               	skipz
   332  07D3  2FD6               	goto	l2164
   333  07D4  3081               	movlw	129
   334  07D5  2FE1               	goto	L1
   335  07D6                     l2164:	
   336                           
   337                           ;MS83F_ADC_AN2.C: 96: else if(Vref==1) {TempAdcon0 |= 0b10100001;}
   338  07D6  0B71               	decfsz	GET_ADC_VALUE@Vref,w
   339  07D7  2FDA               	goto	l2168
   340  07D8  30A1               	movlw	161
   341  07D9  2FE1               	goto	L1
   342  07DA                     l2168:	
   343                           
   344                           ;MS83F_ADC_AN2.C: 97: else if(Vref==2) {TempAdcon0 |= 0b11000001;}
   345  07DA  0871               	movf	GET_ADC_VALUE@Vref,w
   346  07DB  3A02               	xorlw	2
   347  07DC  1D03               	skipz
   348  07DD  2FE0               	goto	l2172
   349  07DE  30C1               	movlw	193
   350  07DF  2FE1               	goto	L1
   351  07E0                     l2172:	
   352                           
   353                           ;MS83F_ADC_AN2.C: 98: else {TempAdcon0 |= 0b11100001;}
   354  07E0  30E1               	movlw	225
   355  07E1                     L1:	
   356  07E1  04F5               	iorwf	GET_ADC_VALUE@TempAdcon0,f
   357                           
   358                           ;MS83F_ADC_AN2.C: 99: ADCON0 = TempAdcon0;
   359  07E2  0875               	movf	GET_ADC_VALUE@TempAdcon0,w
   360  07E3  1283               	bcf	3,5	;RP0=0, select bank0
   361  07E4  1303               	bcf	3,6	;RP1=0, select bank0
   362  07E5  009F               	movwf	31	;volatile
   363                           
   364                           ;MS83F_ADC_AN2.C: 100: DELAY_30US();
   365  07E6  279F               	fcall	_DELAY_30US
   366                           
   367                           ;MS83F_ADC_AN2.C: 101: GO_DONE = 1;
   368  07E7  1283               	bcf	3,5	;RP0=0, select bank0
   369  07E8  1303               	bcf	3,6	;RP1=0, select bank0
   370  07E9  149F               	bsf	31,1
   371  07EA                     l1086:	
   372                           ;MS83F_ADC_AN2.C: 102: while(GO_DONE==1) asm("clrwdt");
   373                           
   374  07EA  1283               	bcf	3,5	;RP0=0, select bank0
   375  07EB  1303               	bcf	3,6	;RP1=0, select bank0
   376  07EC  1C9F               	btfss	31,1
   377  07ED  2FF0               	goto	l2180
   378  07EE  0064               	clrwdt	;#
   379  07EF  2FEA               	goto	l1086
   380  07F0                     l2180:	
   381                           
   382                           ;MS83F_ADC_AN2.C: 103: TempADCBuffer = ADRESH;
   383  07F0  081E               	movf	30,w	;volatile
   384  07F1  00F6               	movwf	GET_ADC_VALUE@TempADCBuffer
   385  07F2  01F7               	clrf	GET_ADC_VALUE@TempADCBuffer+1
   386                           
   387                           ;MS83F_ADC_AN2.C: 104: TempADCBuffer = (TempADCBuffer<<8)|ADRESL;
   388  07F3  00F3               	movwf	??_GET_ADC_VALUE
   389  07F4  1683               	bsf	3,5	;RP0=1, select bank1
   390  07F5  081E               	movf	30,w	;volatile
   391  07F6  00F6               	movwf	GET_ADC_VALUE@TempADCBuffer
   392  07F7  0873               	movf	??_GET_ADC_VALUE,w
   393  07F8  00F7               	movwf	GET_ADC_VALUE@TempADCBuffer+1
   394                           
   395                           ;MS83F_ADC_AN2.C: 105: ADON = 0;
   396  07F9  1283               	bcf	3,5	;RP0=0, select bank0
   397  07FA  101F               	bcf	31,0
   398                           
   399                           ;MS83F_ADC_AN2.C: 106: return(TempADCBuffer);
   400  07FB  0877               	movf	GET_ADC_VALUE@TempADCBuffer+1,w
   401  07FC  00F2               	movwf	?_GET_ADC_VALUE+1
   402  07FD  0876               	movf	GET_ADC_VALUE@TempADCBuffer,w
   403  07FE  00F1               	movwf	?_GET_ADC_VALUE
   404  07FF  0008               	return
   405  0800                     __end_of_GET_ADC_VALUE:	
   406                           
   407                           	psect	text62
   408  079F                     __ptext62:	
   409 ;; =============== function _GET_ADC_VALUE ends ============
   410                           
   411                           
   412 ;; *************** function _DELAY_30US *****************
   413 ;; Defined at:
   414 ;;		line 74 in file "MS83F_ADC_AN2.C"
   415 ;; Parameters:    Size  Location     Type
   416 ;;		None
   417 ;; Auto vars:     Size  Location     Type
   418 ;;  a               1    0[COMMON] unsigned char 
   419 ;; Return value:  Size  Location     Type
   420 ;;		None               void
   421 ;; Registers used:
   422 ;;		wreg, status,2, status,0
   423 ;; Tracked objects:
   424 ;;		On entry : 60/0
   425 ;;		On exit  : 0/0
   426 ;;		Unchanged: FFE00/0
   427 ;; Data sizes:     COMMON   BANK0   BANK1
   428 ;;      Params:         0       0       0
   429 ;;      Locals:         1       0       0
   430 ;;      Temps:          0       0       0
   431 ;;      Totals:         1       0       0
   432 ;;Total ram usage:        1 bytes
   433 ;; Hardware stack levels used:    1
   434 ;; This function calls:
   435 ;;		Nothing
   436 ;; This function is called by:
   437 ;;		_GET_ADC_VALUE
   438 ;; This function uses a non-reentrant model
   439 ;;
   440  079F                     _DELAY_30US:	
   441                           
   442                           ;MS83F_ADC_AN2.C: 75: unsigned char a;
   443                           ;MS83F_ADC_AN2.C: 77: for(a=0;a<6;a++)
   444                           
   445                           ; Regs used in _DELAY_30US: [wreg+status,2+status,0]
   446  079F  01F0               	clrf	DELAY_30US@a
   447  07A0                     l1075:	
   448  07A0  0064               	clrwdt	;#
   449  07A1  3006               	movlw	6
   450  07A2  0AF0               	incf	DELAY_30US@a,f
   451  07A3  0270               	subwf	DELAY_30US@a,w
   452  07A4  1803               	btfsc	3,0
   453  07A5  0008               	return
   454  07A6  2FA0               	goto	l1075
   455  07A7                     __end_of_DELAY_30US:	
   456                           
   457                           	psect	text63
   458  079A                     __ptext63:	
   459 ;; =============== function _DELAY_30US ends ============
   460                           
   461                           
   462 ;; *************** function _ADC_INIT *****************
   463 ;; Defined at:
   464 ;;		line 61 in file "MS83F_ADC_AN2.C"
   465 ;; Parameters:    Size  Location     Type
   466 ;;		None
   467 ;; Auto vars:     Size  Location     Type
   468 ;;		None
   469 ;; Return value:  Size  Location     Type
   470 ;;		None               void
   471 ;; Registers used:
   472 ;;		wreg
   473 ;; Tracked objects:
   474 ;;		On entry : 17F/20
   475 ;;		On exit  : 17F/20
   476 ;;		Unchanged: FFE80/0
   477 ;; Data sizes:     COMMON   BANK0   BANK1
   478 ;;      Params:         0       0       0
   479 ;;      Locals:         0       0       0
   480 ;;      Temps:          0       0       0
   481 ;;      Totals:         0       0       0
   482 ;;Total ram usage:        0 bytes
   483 ;; Hardware stack levels used:    1
   484 ;; This function calls:
   485 ;;		Nothing
   486 ;; This function is called by:
   487 ;;		_main
   488 ;; This function uses a non-reentrant model
   489 ;;
   490  079A                     _ADC_INIT:	
   491                           
   492                           ;MS83F_ADC_AN2.C: 62: ANSEL = 0B00000100;
   493                           
   494                           ; Regs used in _ADC_INIT: [wreg]
   495  079A  3004               	movlw	4
   496  079B  0091               	movwf	17	;volatile
   497                           
   498                           ;MS83F_ADC_AN2.C: 63: ADCON1 = 0B01100000;
   499  079C  3060               	movlw	96
   500  079D  009F               	movwf	31	;volatile
   501  079E  0008               	return
   502  079F                     __end_of_ADC_INIT:	
   503                           
   504                           	psect	text64
   505  07B3                     __ptext64:	
   506 ;; =============== function _ADC_INIT ends ============
   507                           
   508                           
   509 ;; *************** function _DEVICE_INIT *****************
   510 ;; Defined at:
   511 ;;		line 34 in file "MS83F_ADC_AN2.C"
   512 ;; Parameters:    Size  Location     Type
   513 ;;		None
   514 ;; Auto vars:     Size  Location     Type
   515 ;;		None
   516 ;; Return value:  Size  Location     Type
   517 ;;		None               void
   518 ;; Registers used:
   519 ;;		wreg, status,2
   520 ;; Tracked objects:
   521 ;;		On entry : 17F/0
   522 ;;		On exit  : 17F/20
   523 ;;		Unchanged: FFE80/0
   524 ;; Data sizes:     COMMON   BANK0   BANK1
   525 ;;      Params:         0       0       0
   526 ;;      Locals:         0       0       0
   527 ;;      Temps:          0       0       0
   528 ;;      Totals:         0       0       0
   529 ;;Total ram usage:        0 bytes
   530 ;; Hardware stack levels used:    1
   531 ;; This function calls:
   532 ;;		Nothing
   533 ;; This function is called by:
   534 ;;		_main
   535 ;; This function uses a non-reentrant model
   536 ;;
   537  07B3                     _DEVICE_INIT:	
   538                           
   539                           ;MS83F_ADC_AN2.C: 35: OSCCON = 0B01010001;
   540                           
   541                           ; Regs used in _DEVICE_INIT: [wreg+status,2]
   542  07B3  3051               	movlw	81
   543  07B4  1683               	bsf	3,5	;RP0=1, select bank1
   544  07B5  008F               	movwf	15	;volatile
   545                           
   546                           ;MS83F_ADC_AN2.C: 39: INTCON = 0B00000000;
   547  07B6  018B               	clrf	11	;volatile
   548                           
   549                           ;MS83F_ADC_AN2.C: 41: CMCON0 = 0B00000111;
   550  07B7  3007               	movlw	7
   551  07B8  1283               	bcf	3,5	;RP0=0, select bank0
   552  07B9  0099               	movwf	25	;volatile
   553                           
   554                           ;MS83F_ADC_AN2.C: 43: PORTA = 0B00000000;
   555  07BA  0185               	clrf	5	;volatile
   556                           
   557                           ;MS83F_ADC_AN2.C: 44: TRISA = 0B11111111;
   558  07BB  30FF               	movlw	255
   559  07BC  1683               	bsf	3,5	;RP0=1, select bank1
   560  07BD  0085               	movwf	5	;volatile
   561                           
   562                           ;MS83F_ADC_AN2.C: 45: WPUA = 0B00000000;
   563  07BE  0195               	clrf	21	;volatile
   564                           
   565                           ;MS83F_ADC_AN2.C: 47: PORTC = 0B00000000;
   566  07BF  1283               	bcf	3,5	;RP0=0, select bank0
   567  07C0  0187               	clrf	7	;volatile
   568                           
   569                           ;MS83F_ADC_AN2.C: 48: TRISC = 0B00111111;
   570  07C1  303F               	movlw	63
   571  07C2  1683               	bsf	3,5	;RP0=1, select bank1
   572  07C3  0087               	movwf	7	;volatile
   573                           
   574                           ;MS83F_ADC_AN2.C: 49: WPUC = 0B00000000;
   575  07C4  0188               	clrf	8	;volatile
   576                           
   577                           ;MS83F_ADC_AN2.C: 51: OPTION = 0B00001000;
   578  07C5  3008               	movlw	8
   579  07C6  0081               	movwf	1	;volatile
   580  07C7  0008               	return
   581  07C8                     __end_of_DEVICE_INIT:	
   582                           
   583                           	psect	text65
   584  0000                     __ptext65:	
   585 ;; =============== function _DEVICE_INIT ends ============
   586                           
   587  007E                     btemp	set	126	;btemp
   588  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Mon Sep 02 17:45:39 2019

           ??_GET_ADC_VALUE 0073                         _SR0 0CF6                         _SR1 0CF7  
       __size_of_DELAY_30US 0008                        l1072 0000                        l2130 0000  
                      l1075 07A0                        l2140 0000                        l2132 0000  
                      l1092 07A9                        l1069 0000                        l1077 0000  
                      l2142 0000                        l2134 0000                        l1086 07EA  
                      l2136 0000                        l2128 0000                        l2144 0000  
                      l2152 0000                        l2160 0000                        l1089 0000  
                      l2138 0000                        l2154 0000                        l2146 0000  
                      l2180 07F0                        l2172 07E0                        l2164 07D6  
                      l2156 0000                        l2182 0000                        l2166 0000  
                      l2158 0000                        l2190 0000                        l2176 0000  
                      l2168 07DA                        l2178 0000                        l2186 0000  
                      l2188 0000                        _ADON 00F8                        _STRA 0CE8  
                      _STRB 0CE9                        _STRC 0CEA                        _STRD 0CEB  
                      _WREN 0C62                        _WPUA 0095                        _WPUC 0088  
          __end_of_ADC_INIT 079F                        _main 07A7                        btemp 007E  
                      start 0000                       _C1SEN 0CF5                       _C2REN 0CF4  
                     ?_main 0070                       _EEPGD 0C67                       _ANSEL 0091  
                     _PORTA 0005                       _PORTC 0007                       _SRCON 019E  
                     _PULSR 0CF2                       _PULSS 0CF3                       _TRISA 0085  
                     _TRISC 0087        __size_of_DEVICE_INIT 0015                       status 0003  
                     wtemp0 007E                __end_of_main 07B3                      ??_main 0078  
                    _ADCON0 001F                      _ADCON1 009F                      _ADRESH 001E  
                    _ADRESL 009E                      _CMCON0 0019                      _INTCON 000B  
                    _OSCCON 008F                      _OPTION 0081                ??_DELAY_30US 0070  
                 ?_ADC_INIT 0070          __end_of_DELAY_30US 07A7              __pcstackCOMMON 0070  
                ??_ADC_INIT 0070                  __pnvCOMMON 0078  GET_ADC_VALUE@TempADCBuffer 0076  
                __pmaintext 07A7       __end_of_GET_ADC_VALUE 0800                     _GO_DONE 00F9  
                   _PSTRCON 019D                     _STRSYNC 0CEC               ??_DEVICE_INIT 0070  
         GET_ADC_VALUE@Vref 0071        end_of_initialization 0798           __size_of_ADC_INIT 0005  
       __end_of_DEVICE_INIT 07C8         start_initialization 0798                 _DEVICE_INIT 07B3  
                  _ADC_INIT 079A      __size_of_GET_ADC_VALUE 0038                 DELAY_30US@a 0070  
                  _Buff_AN2 0078                  _DELAY_30US 079F               _GET_ADC_VALUE 07C8  
                  __ptext60 0000                    __ptext61 07C8                    __ptext62 079F  
                  __ptext63 079A                    __ptext64 07B3                    __ptext65 0000  
             __size_of_main 000C              ?_GET_ADC_VALUE 0071      GET_ADC_VALUE@ChannelNO 0074  
              ?_DEVICE_INIT 0070     GET_ADC_VALUE@TempAdcon0 0075                 ?_DELAY_30US 0070  
